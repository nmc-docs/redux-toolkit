"use strict";(self.webpackChunkhtml=self.webpackChunkhtml||[]).push([[911],{3905:(t,e,n)=>{n.d(e,{Zo:()=>l,kt:()=>k});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var c=r.createContext({}),p=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):s(s({},e),t)),n},l=function(t){var e=p(t.components);return r.createElement(c.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,c=t.parentName,l=i(t,["components","mdxType","originalType","parentName"]),u=p(n),m=o,k=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(k,s(s({ref:e},l),{},{components:n})):r.createElement(k,s({ref:e},l))}));function k(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,s=new Array(a);s[0]=m;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i[u]="string"==typeof t?t:o,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},477:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:3},s="V\xed d\u1ee5 v\u1ec1 Redux Toolkit",i={unversionedId:"redux-toolkit-example",id:"redux-toolkit-example",title:"V\xed d\u1ee5 v\u1ec1 Redux Toolkit",description:"- V\xed d\u1ee5 nh\u1ecf d\u01b0\u1edbi \u0111\xe2y m\xf4 t\u1ea3 vi\u1ec7c s\u1eed d\u1ee5ng Redux trong React, d\xf9ng TypeScript",source:"@site/docs/redux-toolkit-example.md",sourceDirName:".",slug:"/redux-toolkit-example",permalink:"/redux-toolkit/redux-toolkit-example",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"useDispatch()",permalink:"/redux-toolkit/redux-api/useDispatch"},next:{title:"Redux thunk",permalink:"/redux-toolkit/redux-thunk"}},c={},p=[],l={toc:p},u="wrapper";function d(t){let{components:e,...a}=t;return(0,o.kt)(u,(0,r.Z)({},l,a,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"v\xed-d\u1ee5-v\u1ec1-redux-toolkit"},"V\xed d\u1ee5 v\u1ec1 Redux Toolkit"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"V\xed d\u1ee5 nh\u1ecf d\u01b0\u1edbi \u0111\xe2y m\xf4 t\u1ea3 vi\u1ec7c s\u1eed d\u1ee5ng Redux trong React, d\xf9ng TypeScript")),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"1695968920772",src:n(6390).Z,title:"C\xe2y th\u01b0 m\u1ee5c",width:"336",height:"424"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/store/task/slice.ts"',title:'"src/store/task/slice.ts"'},'import { createSlice } from "@reduxjs/toolkit";\nimport type { PayloadAction } from "@reduxjs/toolkit";\n\ninterface Task {\n  name: string;\n  isCompleted: boolean;\n}\n\nconst initialState: { taskList: Task[] } = {\n  taskList: [],\n};\n\nconst taskSlice = createSlice({\n  name: "task",\n  initialState,\n  reducers: {\n    addTask: (state, action: PayloadAction<Task>) => {\n      state.taskList.push(action.payload);\n    },\n    deleteTask: (state, action: PayloadAction<number>) => {\n      state.taskList.splice(action.payload, 1);\n    },\n  },\n});\n\nexport default taskSlice;\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/store/task/index.ts"',title:'"src/store/task/index.ts"'},'import taskSlice from "./slice";\n\nconst taskActions = taskSlice.actions;\nconst taskReducer = taskSlice.reducer;\n\nexport { taskActions, taskReducer };\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/store/index.ts"',title:'"src/store/index.ts"'},'import { configureStore } from "@reduxjs/toolkit";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from "react-redux";\nimport { taskReducer } from "./task";\n\nexport const store = configureStore({\n  reducer: {\n    task: taskReducer,\n  },\n});\ntype AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/App.tsx"',title:'"src/App.tsx"'},'import { useState } from "react";\nimport { useAppSelector, useAppDispatch } from "./store";\nimport { taskActions } from "./store/task";\n\nexport default function App() {\n  const dispatch = useAppDispatch();\n  const { taskList } = useAppSelector((state) => state.task);\n  const [name, setName] = useState("");\n\n  const handleAddTask = () => {\n    dispatch(\n      taskActions.addTask({\n        name,\n        isCompleted: false,\n      })\n    );\n  };\n\n  return (\n    <div>\n      <input\n        type="text"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <button onClick={handleAddTask}>Add new task</button>\n      <ul>\n        {taskList.map((task, index) => (\n          <li key={index}>\n            <span>{task.name}</span>\n            <button onClick={() => dispatch(taskActions.deleteTask(index))}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="src/index.tsx"',title:'"src/index.tsx"'},'import { createRoot } from "react-dom/client";\nimport App from "./App";\nimport { Provider } from "react-redux";\nimport { store } from "./store";\n\nconst rootElement = document.getElementById("root");\nconst root = createRoot(rootElement!);\n\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n')))}d.isMDXComponent=!0},6390:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/1695968920772-37d3dc1963e6e3494d26d8e8ff4a86e1.png"}}]);